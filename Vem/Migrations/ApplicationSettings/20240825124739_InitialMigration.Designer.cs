// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vem.Database.Contexts;

#nullable disable

namespace Vem.Migrations.ApplicationSettings
{
    [DbContext(typeof(ApplicationSettingsContext))]
    [Migration("20240825124739_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Database.Models.ApplicationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StoredValue")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("character varying(34)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationSettings", (string)null);

                    b.HasDiscriminator<string>("Type").HasValue("ApplicationSetting");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Vem.Database.Models.OptionalBooleanSetting", b =>
                {
                    b.HasBaseType("Database.Models.ApplicationSetting");

                    b.Property<bool?>("Value")
                        .HasColumnType("boolean");

                    b.HasDiscriminator().HasValue("OptionalBooleanSetting");
                });
#pragma warning restore 612, 618
        }
    }
}
